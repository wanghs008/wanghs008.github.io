<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Doppler Shift</title>
      <link href="/2021/09/14/DopplerShift/"/>
      <url>/2021/09/14/DopplerShift/</url>
      
        <content type="html"><![CDATA[<!--这是一段注释~--><div align='center'><font size='70'>多普勒频移</font></div><h1 id="多普勒效应"><a href="#多普勒效应" class="headerlink" title="多普勒效应"></a>多普勒效应</h1><p>1842年奥地利物理学家克里斯琴$\cdot$约翰$\cdot$多普勒(Christian Johann Doppler)发现一种<strong>有趣的物理现象</strong>：当声源与声波接收器处于相对运动状态时，声波接收器接收到的声源频率不同于声源发射的频率，且频率的变化与二者的相对运动速度有关。后来人们发现不止是声源，其他信号源和观察者的相对运动都会导致观察者接收到的信号频率发生变化，于是为了纪念多普勒的这一发现，这一类现象就被称作<code>多普勒效应(doppler effect)</code>。</p><table><tr><td bgcolor=#C0C0C0>The doppler effect is the change in frequency or wavelength of a wave in relation to observer who is moving relative to the wave source.</td></tr></table><hr><h1 id="多普勒频移"><a href="#多普勒频移" class="headerlink" title="多普勒频移"></a>多普勒频移</h1><p>无论是信号源运动、还是观察者运动或者两者都运动，本质上都没有区别，在这里我们假设信号源是静止的，观察者是运动的，并且所有的测量都是在信号源的参照系中进行的，这样不失一般性，因此有以下两种情况：</p><ul><li><p>观察者靠近信号源，连续波之间的到达时间降低，频率增加；</p></li><li><p>观察者远离信号源，连续波之间的到达时间增加，频率降低。</p></li></ul><p>观察者接收到的频率与信号源发射出的频率之间频率的改变量被称作<code>多普勒频移(doppler shift)</code>。</p><div align=center><img width="80%" height="80%" src="https://i.loli.net/2021/09/16/UW1VgPS3MFXcutB.jpg" alt="randn"/></div><hr><h1 id="一般雷达系统中的多普勒频移"><a href="#一般雷达系统中的多普勒频移" class="headerlink" title="一般雷达系统中的多普勒频移"></a>一般雷达系统中的多普勒频移</h1><blockquote><p>针对雷达系统(电磁波传播速度为$c$)，设雷达的固有频率为$f_0$，其固有波长为$\lambda_0$。</p></blockquote><h2 id="目标靠近雷达"><a href="#目标靠近雷达" class="headerlink" title="目标靠近雷达"></a>目标靠近雷达</h2><p>如下图所示，考虑一个宽度为$T_r$(s)的脉冲入射到一个一速度$v$向雷达运动的目标上：</p><div align=center><img width="61.8%" height="61.8%" src="https://i.loli.net/2021/09/15/qzh8j9tM3kQfUY7.jpg" alt="randn"/></div><p>定义$d$为在间隔$\Delta t$内目标的运动距离：</p><script type="math/tex; mode=display">d=v\Delta t</script><blockquote><p>其中，$\Delta t$等于从脉冲前沿碰到目标到脉冲后沿碰到目标之间的时间。</p></blockquote><p>定义$s$为在间隔$\Delta t$内脉冲前沿和脉冲后沿的运动距离：</p><script type="math/tex; mode=display">s=c\Delta t</script><p>那么入射脉冲宽度$T_r$为：</p><script type="math/tex; mode=display">T_r=\frac{L}{c}=\frac{s+d}{c}=\frac{c+v}{c}\Delta t</script><p>反射脉冲宽度<script type="math/tex">T_r^{'}</script>为：</p><script type="math/tex; mode=display">T^{'}_r=\frac{L^{'}}{c}=\frac{s-d}{c}=\frac{c-v}{c}\Delta t</script><p>可以建立入射脉冲宽度$T_r$和反射脉冲宽度<script type="math/tex">T_r^{'}</script>之间的如下关系式：</p><script type="math/tex; mode=display">T^{'}_r=\frac{c-v}{c+v}T_r</script><p>由于脉冲宽度$T_r$与脉冲重复间隔$PRI$成正比，脉冲重复频率$PRF$与脉冲重复间隔$PRI$成反比，故：</p><script type="math/tex; mode=display">f^{'}_r=\frac{c+v}{c-v}f_r</script><p>然而，由于周期数不变，反射信号的频率会升高相同的因子<sup><a href="#fn_1" id="reffn_1">1</a></sup>：</p><script type="math/tex; mode=display">f^{'}_0=\frac{c+v}{c-v}f_0</script><blockquote id="fn_1"><sup>1</sup>. 实际上，因子$(c+v)/(c-v)$通常称为时间膨胀因子。<a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a></blockquote><p>则多<strong>普勒频移</strong>为：</p><script type="math/tex; mode=display">f_d=f^{'}_0-f_0=\frac{c+v}{c-v}f_0-f_0=\frac{2v}{c-v}f_0</script><p>但是因为$v\ll c$和$c=\lambda_0f_0$，所以：</p><script type="math/tex; mode=display">f_d\approx\frac{2v}{c}f_0=\frac{2v}{\lambda_0}</script><h2 id="目标远离雷达"><a href="#目标远离雷达" class="headerlink" title="目标远离雷达"></a>目标远离雷达</h2><div align=center><img width="61.8%" height="61.8%" src="https://i.loli.net/2021/09/16/Z5tnKED2xFTG4qk.jpg" alt="randn"/></div><p>分析同上，则<strong>多普勒频移</strong>为：</p><script type="math/tex; mode=display">f_d=f^{'}_0-f_0=\frac{c-v}{c+v}f_0-f_0=-\frac{2v}{c}f_0=-\frac{2v}{\lambda_0}</script><h2 id="拓展到一般情况"><a href="#拓展到一般情况" class="headerlink" title="拓展到一般情况"></a>拓展到一般情况</h2><p>当雷达与目标不是径向运动且雷达和目标都有运动时，设目标的速度为$v_d$，方向与目标雷达连线之间的夹角为$\theta_d$，设雷达的速度为$v_s$，方向与目标雷达连线之间的夹角为$\theta_s$，则可得到<strong>经典多普勒频移普适公式</strong>：</p><script type="math/tex; mode=display">f^{'}_0=\frac{c+(v_d\cos{\theta_d}+v_s\cos{\theta_s})}{c-(v_d\cos{\theta_d}+v_s\cos{\theta_s})}f_0</script><script type="math/tex; mode=display">f_d=\frac{2(v_d\cos{\theta_d}+v_s\cos{\theta_s})}{\lambda_0}</script><h1 id="合成孔径雷达系统中的多普勒频移"><a href="#合成孔径雷达系统中的多普勒频移" class="headerlink" title="合成孔径雷达系统中的多普勒频移"></a>合成孔径雷达系统中的多普勒频移</h1><p>由于雷达与目标的相对运动，接收信号经历了多普勒频移，这一多普勒频移存在于解调后的接收信号中，与脉冲带宽相比，频移很小，难以察觉，但是当沿方位向观测时，多普勒频移就很明显了。如下图所示，展示了合成孔径雷达系统中雷达位置和波束在地面覆盖区的简单几何模型以及雷达数据获取的几何关系：</p><div align=center><img width="100%" height="100%" src="https://i.loli.net/2021/09/16/z6MvDghOybtWJAu.jpg" alt="randn"/></div><h2 id="多普勒中心频率"><a href="#多普勒中心频率" class="headerlink" title="多普勒中心频率"></a>多普勒中心频率</h2><p>通常SAR数据在方位频域进行处理，则波束中心穿越时刻(<script type="math/tex">\eta_{c}</script><sup><a href="#fn_2" id="reffn_2">2</a></sup>)等效转换为频域中的多普勒中心频率(<script type="math/tex">f_{\eta_c}</script>)。</p><blockquote id="fn_2"><sup>2</sup>. 雷达最接近目标的位置称为最近位置，对于单个点目标，为了便于分析，起始时刻通常选在最近位置时刻，也称零多普勒时刻。雷达波束中心经过目标的时刻称为波束中心穿越时刻，记为<script type="math/tex">\eta_c</script>。当波束前视时，<script type="math/tex">\eta_{c}</script>为负，当波束前视时，<script type="math/tex">\eta_{c}</script>为正。<a href="#reffn_2" title="Jump back to footnote [2] in the text."> &#8617;</a></blockquote><blockquote id="fn_2"><sup>2</sup>. 容易推导：<script type="math/tex">\eta_c=-\frac{R(\eta_c)\sin{\theta_{sq,c}}}{v_{g}}</script><a href="#reffn_2" title="Jump back to footnote [2] in the text."> &#8617;</a></blockquote><p>根据<strong>经典多普勒频移普适公式</strong>，我们可以很容易地得到多普勒中心频率：</p><script type="math/tex; mode=display">f_{\eta_c}=\frac{2v_s\sin{\theta_{sq,c}}}{\lambda_0}</script><p>同时，我们知道$\eta=\eta_c$处的多普勒中心频率正比于瞬时斜距$R(\eta)$<sup><a href="#fn_3" id="reffn_3">3</a></sup>的变化率(即径向速度)：</p><blockquote id="fn_3"><sup>3</sup>. 双曲线模型：$R(\eta)=\sqrt{R_0^2+v_r^2\eta^2}$<a href="#reffn_3" title="Jump back to footnote [3] in the text."> &#8617;</a></blockquote><blockquote id="fn_3"><sup>3</sup>. 抛物线模型：$R(\eta)=R_0+\frac{v_r^2\eta^2}{2R_0}$<a href="#reffn_3" title="Jump back to footnote [3] in the text."> &#8617;</a></blockquote><script type="math/tex; mode=display">f_{\eta_c}=-\frac{2}{\lambda_0}\frac{dR(\eta)}{d\eta}\bigg|_{\eta=\eta_c}=-\frac{2v_r^2\eta_c}{\lambda_0R(\eta_c)}=\frac{2v_r\sin{\theta_{r,c}}}{\lambda_0}=\frac{2v_s\sin{\theta_{sq,c}}}{\lambda_0}</script><p>可见，两种推导思路的结果是一致的。</p><h2 id="多普勒带宽"><a href="#多普勒带宽" class="headerlink" title="多普勒带宽"></a>多普勒带宽</h2><p>多普勒带宽是目标在雷达3dB波束照射期间产生的频率漂移，如下图所示：</p><div align=center><img width="61.8%" height="61.8%" src="https://i.loli.net/2021/09/16/2pXrMa7fKmEewbL.jpg" alt="randn"/></div><p>当雷达左侧3dB波束边缘照射目标到雷达波束中心照射目标，雷达是靠近目标的，此时由于雷达与目标之间的相对运动产生的多普勒频移为：</p><script type="math/tex; mode=display">f_{\eta1}=\frac{2v_s\sin(\theta_{sq,r}+\theta_{bw})}{\lambda_0}</script><p>当雷达波束中心照射目标到雷达右侧3dB波束边缘照射目标，雷达是靠近目标的，此时由于雷达与目标之间的相对运动产生的多普勒频移为：</p><script type="math/tex; mode=display">f_{\eta2}=\frac{2v_s\sin(\theta_{sq,r}-\theta_{bw})}{\lambda_0}</script><p>则多普勒带宽为：</p><script type="math/tex; mode=display">\Delta f_{dop}=f_{\eta1}-f_{\eta2}=\frac{2v_s\left[2\cos{\theta_{sq,r}}\sin{\theta_{bw}}\right]}{\lambda_0}</script><p>由于3dB波束宽度较小，可利用以下近似<script type="math/tex">\theta_{bw}=\tan{\theta_{bw}}=\sin{\theta_{bw}}</script>，则有：</p><script type="math/tex; mode=display">\Delta f_{dop}=\frac{2v_s\cos{\theta_{sq,r}}}{\lambda_0}\theta_{bw}</script><blockquote><p>这一带宽决定了采样要求，即确定了PRF的下限。然而，在<script type="math/tex">\theta_{bw}</script>处的波束边沿，信号强度只下降了6dB，并且方位谱衰减得比较慢，因此过采样率<script type="math/tex">\alpha_{a,s}</script>一般应该取<script type="math/tex">1.1\sim1.4</script>，以减小方位模糊功率。</p></blockquote><h2 id="方位混叠与多普勒中心"><a href="#方位混叠与多普勒中心" class="headerlink" title="方位混叠与多普勒中心"></a>方位混叠与多普勒中心</h2><p>持续更新中…</p><p><strong>本文作者水平有限，如有错误，恳请批评指正！</strong></p>]]></content>
      
      
      <categories>
          
          <category> Rader </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Rader </tag>
            
            <tag> SAR </tag>
            
            <tag> 多普勒效应 </tag>
            
            <tag> 多普勒频移 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Program Display</title>
      <link href="/2021/09/08/ProgramDisplay/"/>
      <url>/2021/09/08/ProgramDisplay/</url>
      
        <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>在编写Matlab程序的过程中，有时候我们希望将比较关键的一些变量或者是经过一定计算得到的变量显示出来，有时候我们希望在进行较长时间的for循环的时候将进度条显示出来，虽然这些功能并不会影响我们程序整体运行，甚至可以说可有可无，但增加了这些程序后产生的视觉效果可能会使我们对程序运行结果有一个大概的了解。</p><p><strong>下面我就以上两个方面进行一个简单的介绍：</strong></p><h2 id="显示输出函数："><a href="#显示输出函数：" class="headerlink" title="显示输出函数："></a>显示输出函数：</h2><h3 id="disp语法"><a href="#disp语法" class="headerlink" title="disp语法"></a><code>disp语法</code></h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="built_in">disp</span>([<span class="string">&#x27;my test=&#x27;</span>,num2str(x),<span class="string">&#x27;%&#x27;</span>]);</span><br></pre></td></tr></table></figure><blockquote><p>disp函数类似于C语言中的print函数，可以同时输出字符串和数字(使用num2str函数转换为字符串或字符向量)。</p></blockquote><p>因此我们可以采用disp函数和num2str函数将想要知道的变量显示在Matlab的命令行窗口。</p><h4 id="example"><a href="#example" class="headerlink" title="example"></a><code>example</code></h4><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">% 显示数字</span></span><br><span class="line">A = [<span class="number">15</span>, <span class="number">150</span>];</span><br><span class="line"><span class="built_in">disp</span>(A);</span><br><span class="line"><span class="comment">% 显示字符串</span></span><br><span class="line">S = <span class="string">&#x27;Hello World.&#x27;</span>;</span><br><span class="line"><span class="built_in">disp</span>(S);</span><br><span class="line"><span class="comment">% 显示超链接</span></span><br><span class="line">X = <span class="string">&#x27;&lt;a href = &quot;https://www.mathworks.com&quot;&gt;MathWorks Web Site&lt;/a&gt;&#x27;</span>;</span><br><span class="line"><span class="built_in">disp</span>(X);</span><br></pre></td></tr></table></figure><h4 id="sprintf"><a href="#sprintf" class="headerlink" title="sprintf"></a><code>sprintf</code></h4><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">st = sprintf(<span class="string">&#x27;my test=%a.bd&#x27;</span>,x);  <span class="comment">% 有符号整型</span></span><br><span class="line">st = sprintf(<span class="string">&#x27;my test=%a.be&#x27;</span>,x);  <span class="comment">% 定点浮点型</span></span><br><span class="line">st = sprintf(<span class="string">&#x27;my test=%a.bf&#x27;</span>,x);  <span class="comment">% 指数浮点型</span></span><br><span class="line">st = sprintf(<span class="string">&#x27;my test=%a.bg&#x27;</span>,x);  <span class="comment">% 紧凑浮点型</span></span><br></pre></td></tr></table></figure><blockquote><p>sprintf函数可以将数据格式转换为字符串或字符向量，相比于num2str函数，它可以指定格式化操作符(格式化操作符以%开头，以转换字符结尾，可以在%和转换字符之间指定标识符、标志、字段宽度、精度和子类型操作符)格式化数据，因此使用起来更加灵活。</p><p>其中，%为数据格式符，因此%到d/e/f/g之间的字符是不显示的，它只是指出数据的格式，同时a.b表示数字的长度为a位，小数点后b位。</p></blockquote><h4 id="disp-sprintf"><a href="#disp-sprintf" class="headerlink" title="disp+sprintf"></a><code>disp+sprintf</code></h4><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="built_in">disp</span>([<span class="string">&#x27;my test=&#x27;</span>,sprintf(<span class="string">&#x27;%a.bf&#x27;</span>,x),<span class="string">&#x27;%&#x27;</span>]);</span><br></pre></td></tr></table></figure><p>通过以上分析，采用disp函数和sprintf函数可以帮助我们更加方便的显示数据。</p><h3 id="fprintf语法一"><a href="#fprintf语法一" class="headerlink" title="fprintf语法一"></a><code>fprintf语法一</code></h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">fprintf(fileID,formatSpec,A1,...,An);</span><br></pre></td></tr></table></figure><blockquote><p>fprintf函数按列顺序将formatSpec应用于数组A1,…,An的所有元素，并将数据写入到一个文本文件。</p></blockquote><h4 id="example-1"><a href="#example-1" class="headerlink" title="example"></a><code>example</code></h4><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">x = <span class="number">0</span>:<span class="number">0.1</span>:<span class="number">1</span>;</span><br><span class="line">A = [x;<span class="built_in">exp</span>(x)];</span><br><span class="line"></span><br><span class="line">fileID = fopen(<span class="string">&#x27;exp.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>);</span><br><span class="line">fprintf(fileID,<span class="string">&#x27;%6s %12s\n&#x27;</span>,<span class="string">&#x27;x&#x27;</span>,<span class="string">&#x27;exp(x)&#x27;</span>);</span><br><span class="line">fprintf(fileID,<span class="string">&#x27;%6.2f %12.8f\n&#x27;</span>,A);</span><br><span class="line">flose(fileID);</span><br><span class="line"><span class="comment">% 通过type exp.txt查看</span></span><br></pre></td></tr></table></figure><h3 id="fprintf语法二"><a href="#fprintf语法二" class="headerlink" title="fprintf语法二"></a><code>fprintf语法二</code></h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">fprintf(formatSpec,A1,...,An);</span><br></pre></td></tr></table></figure><blockquote><p>fprintf函数设置数据的格式并在屏幕上显示结果。</p></blockquote><h4 id="example-2"><a href="#example-2" class="headerlink" title="example"></a><code>example</code></h4><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">A1 = [<span class="number">9.9</span>, <span class="number">9900</span>];</span><br><span class="line">A2 = [<span class="number">8.8</span>, <span class="number">7.7</span> ; <span class="number">8800</span>, <span class="number">7700</span>];</span><br><span class="line">formatSpec = <span class="string">&#x27;X is %4.2f meters or %8.2f mm\n&#x27;</span>;</span><br><span class="line">fprintf(formatSpec,A1,A2)</span><br></pre></td></tr></table></figure><h3 id="fprintf语法三"><a href="#fprintf语法三" class="headerlink" title="fprintf语法三"></a><code>fprintf语法三</code></h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">nbytes = fprintf(__);</span><br></pre></td></tr></table></figure><blockquote><p>使用前述语法中的任意输入参数返回fprintf所写入的字节数</p></blockquote><h4 id="example-3"><a href="#example-3" class="headerlink" title="example"></a><code>example</code></h4><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">A = <span class="built_in">magic</span>(<span class="number">4</span>);</span><br><span class="line">fileID = fopen(<span class="string">&#x27;myfile.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>);</span><br><span class="line">nbytes = fprintf(fileID,<span class="string">&#x27;%5d %5d %5d %5d\n&#x27;</span>,A);</span><br><span class="line">flose(fileID);</span><br></pre></td></tr></table></figure><h4 id="example-4"><a href="#example-4" class="headerlink" title="example"></a><code>example</code></h4><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="comment">% 显示超链接</span></span><br><span class="line">url = <span class="string">&#x27;https://www.mathworks.com&#x27;</span></span><br><span class="line">sitename = <span class="string">&#x27;MathWorks Web Site&#x27;</span></span><br><span class="line">fprintf(<span class="string">&#x27;&lt;a href = &quot;%s&quot;&gt;%s&lt;/a&gt;\n&#x27;</span>,url,sitename);</span><br></pre></td></tr></table></figure><hr><h2 id="转换字符："><a href="#转换字符：" class="headerlink" title="转换字符："></a>转换字符：</h2><!--| 值类型 | 转换 | 详细信息 || :-: | :-: | :-: || 有符号整型 | %d | 以10为基数 || 有符号整型 | %i | 以10为基数 |--><!--colspan：规定单元格可占据的列数rowspan：规定单元格可占据的行数--><table><!--<caption>我是表格标题</caption>-->    <tr>        <th bgcolor="#B0C4DE">值类型</th>        <th bgcolor="#B0C4DE">转换</th>        <th bgcolor="#B0C4DE">详细信息</th>      </tr >    <tr >        <td align="center" rowspan="2">有符号整型</td>        <td align="center">%d</td>        <td align="center" rowspan="2">以10为基数</td>    </tr>    <tr >        <td align="center">%i</td>    </tr>    <tr >        <td align="center" rowspan="4">无符号整型</td>        <td align="center">%u</td>        <td align="center">以10为基数</td>    </tr>    <tr >        <td align="center">%o</td>        <td align="center">以8为基数-八进制</td>    </tr>    <tr >        <td align="center">%x</td>        <td align="center">以16为基数-十六进制，小写字母a-f</td>    </tr>    <tr >        <td align="center">%X</td>        <td align="center">以16为基数-十六进制，大写字母A-F</td>    </tr>    <tr >        <td align="center" rowspan="5">浮点数</td>        <td align="center">%f</td>        <td align="center">定点记数法，使用精度操作符指定小数点后的位数</td>    </tr>    <tr >        <td align="center">%e</td>        <td align="center">指数记数法，小写字母e</td>    </tr>    <tr >        <td align="center">%E</td>        <td align="center">指数记数法，大写字母E</td>    </tr>    <tr >        <td align="center">%g</td>        <td align="center">更紧凑的%e或%f，不带尾随零</td>    </tr>    <tr >        <td align="center">%G</td>        <td align="center">更紧凑的%E或%f，不带尾随零</td>    </tr>    <tr >        <td align="center" rowspan="2">字符或字符串</td>        <td align="center">%c</td>        <td align="center">单个字符</td>    </tr>    <tr >        <td align="center">%s</td>        <td align="center">字符向量或字符串数组</td>    </tr></table><h3 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h3><p>处理函数输入参数的顺序，使用语法为：<code>n$</code>，其中<code>n</code>代表函数调用中其他输入参数的位置。</p><h4 id="example-5"><a href="#example-5" class="headerlink" title="example"></a><code>example</code></h4><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">fprintf(<span class="string">&#x27;%3$s %2$s %1$s %2$s&#x27;</span>,<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;C&#x27;</span>);</span><br><span class="line"><span class="comment">% 输出为：C B A B</span></span><br></pre></td></tr></table></figure><h3 id="标志"><a href="#标志" class="headerlink" title="标志"></a>标志</h3><table>    <tr >        <td align="center" rowspan="3">'-'</td>        <td align="center">左对齐</td>    </tr>    <tr >        <td align="center">示例：%-5.2f</td>    </tr>    <tr >        <td align="center">示例：%-10s</td>    </tr>    <tr >        <td align="center" rowspan="4">'+'</td>        <td align="center">始终为任何数值输出符号字符</td>    </tr>    <tr >        <td align="center">示例：%+5.2f</td>    </tr>    <tr >        <td align="center">右对齐文本</td>    </tr>    <tr >        <td align="center">示例：%+10s</td>    </tr>    <tr >        <td align="center" rowspan="2">' '</td>        <td align="center">在值之前插入空格</td>    </tr>    <tr >        <td align="center">示例：% 5.2f</td>    </tr>    <tr >        <td align="center" rowspan="2">'0'</td>        <td align="center">在值之前补零以填充字段宽度</td>    </tr>    <tr >        <td align="center">示例：%05.2f</td>    </tr>    <tr >        <td align="center" rowspan="5">'#'</td>        <td align="center">修改选定的数值转换：</td>    </tr>    <tr >        <td align="center">对于%o、%x、%X，将输出0、0x、OX前缀</td>    </tr>     <tr >        <td align="center">对于%f、%e、%E，即使精度为零也将输出小数点</td>    </tr>    <tr >        <td align="center">对于%g、%G，不删除尾随零或小数点</td>    </tr>    <tr >        <td align="center">示例：#5.0f</td>    </tr></table><hr><h2 id="显示进度条函数："><a href="#显示进度条函数：" class="headerlink" title="显示进度条函数："></a>显示进度条函数：</h2><p>进度条显示包含以下四个部分：</p><h3 id="窗口打开部分"><a href="#窗口打开部分" class="headerlink" title="窗口打开部分"></a><code>窗口打开部分</code></h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">wait_title = waitbar(<span class="number">0</span>,<span class="string">&#x27;Program Initializing ...&#x27;</span>);  </span><br></pre></td></tr></table></figure><h3 id="数据更新部分"><a href="#数据更新部分" class="headerlink" title="数据更新部分"></a><code>数据更新部分</code></h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">Display_Data = num2str(roundn(<span class="built_in">i</span>/N*<span class="number">100</span>,<span class="number">-1</span>));</span><br><span class="line">Display_Str  = [<span class="string">&#x27;Computation Progress ... &#x27;</span>,Display_Data,<span class="string">&#x27;%&#x27;</span>];</span><br></pre></td></tr></table></figure><h3 id="动态显示部分"><a href="#动态显示部分" class="headerlink" title="动态显示部分"></a><code>动态显示部分</code></h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">waitbar(<span class="built_in">i</span>/N,wait_title,Display_Str) </span><br></pre></td></tr></table></figure><h3 id="窗口关闭部分"><a href="#窗口关闭部分" class="headerlink" title="窗口关闭部分"></a><code>窗口关闭部分</code></h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">close(wait_title);</span><br></pre></td></tr></table></figure><p>通过以上四个部分与for循环的结合，我们可以得到基本的进度条函数：</p><h3 id="基本进度条函数"><a href="#基本进度条函数" class="headerlink" title="基本进度条函数"></a><code>基本进度条函数</code></h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">wait_title = waitbar(<span class="number">0</span>,<span class="string">&#x27;Program Initializing ...&#x27;</span>);  </span><br><span class="line">pause(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:N</span><br><span class="line"></span><br><span class="line">    <span class="comment">%%%%%%%</span></span><br><span class="line">    <span class="comment">%代码块</span></span><br><span class="line">    <span class="comment">%%%%%%%</span></span><br><span class="line"></span><br><span class="line">    pause(<span class="number">0.001</span>);</span><br><span class="line">    Display_Data = num2str(roundn(<span class="built_in">i</span>/N*<span class="number">100</span>,<span class="number">-1</span>));</span><br><span class="line">    Display_Str  = [<span class="string">&#x27;Computation Progress ... &#x27;</span>,Display_Data,<span class="string">&#x27;%&#x27;</span>];</span><br><span class="line">    waitbar(<span class="built_in">i</span>/N,wait_title,Display_Str) </span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">pause(<span class="number">1</span>);</span><br><span class="line">close(wait_title);</span><br></pre></td></tr></table></figure><blockquote><p>一般情况下，pause(a)表示程序暂停a秒后继续执行，若pause()无参数，则表示程序暂停，按任意键程序继续执行。</p></blockquote><p>执行效果如下：</p><div align=center><img width="61.8%" height="61.8%" src="https://i.loli.net/2021/09/08/8HC9NomQLW6lbpe.png" alt="randn"/></div><p>如果我们想知道程序在这个循环下运行了多长时间，那么我们在基本进度条函数下添加计时子函数，就得到了计时进度条函数：</p><h3 id="计时进度条函数"><a href="#计时进度条函数" class="headerlink" title="计时进度条函数"></a><code>计时进度条函数</code></h3><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">tic</span><br><span class="line">wait_title = waitbar(<span class="number">0</span>,<span class="string">&#x27;Program Initializing ...&#x27;</span>);  </span><br><span class="line">pause(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:N</span><br><span class="line"></span><br><span class="line">    <span class="comment">%%%%%%%</span></span><br><span class="line">    <span class="comment">%代码块</span></span><br><span class="line">    <span class="comment">%%%%%%%</span></span><br><span class="line"></span><br><span class="line">    pause(<span class="number">0.001</span>);</span><br><span class="line">    Time_Trans   = Time_Transform(toc);</span><br><span class="line">    Time_Disp    = Time_Display(Time_Trans);</span><br><span class="line">    Display_Data = num2str(roundn(<span class="built_in">i</span>/N*<span class="number">100</span>,<span class="number">-1</span>));</span><br><span class="line">    Display_Str  = [<span class="string">&#x27;Computation Progress ... &#x27;</span>,Display_Data,<span class="string">&#x27;%&#x27;</span>,<span class="string">&#x27; --- &#x27;</span>,...</span><br><span class="line">                    <span class="string">&#x27;Using Time: &#x27;</span>,Time_Disp];</span><br><span class="line">    waitbar(<span class="built_in">i</span>/N,wait_title,Display_Str) </span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">pause(<span class="number">1</span>);</span><br><span class="line">close(wait_title);</span><br><span class="line">toc</span><br></pre></td></tr></table></figure><h4 id="时间转换函数"><a href="#时间转换函数" class="headerlink" title="时间转换函数"></a>时间转换函数</h4><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">y</span> = <span class="title">Time_Transform</span><span class="params">(u)</span></span></span><br><span class="line">    Time_in = u(<span class="number">1</span>);</span><br><span class="line">    Hours   = <span class="built_in">fix</span>(Time_in/<span class="number">3600</span>);</span><br><span class="line">    Minutes = <span class="built_in">fix</span>((Time_in-Hours*<span class="number">3600</span>)/<span class="number">60</span>);</span><br><span class="line">    Seconds = <span class="built_in">fix</span>(Time_in-Hours*<span class="number">3600</span>-Minutes*<span class="number">60</span>);</span><br><span class="line">    Time_out = [Hours Minutes Seconds];</span><br><span class="line">    y = Time_out;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h4 id="时间显示函数"><a href="#时间显示函数" class="headerlink" title="时间显示函数"></a>时间显示函数</h4><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">y</span> = <span class="title">Time_Display</span><span class="params">(u)</span></span></span><br><span class="line">    Hours   = u(<span class="number">1</span>);</span><br><span class="line">    Minutes = u(<span class="number">2</span>);</span><br><span class="line">    Seconds = u(<span class="number">3</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> Hours == <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> Minutes == <span class="number">0</span></span><br><span class="line">            Time_out = [num2str(Seconds),<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;s&#x27;</span>];</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            Time_out = [num2str(Minutes),<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;m&#x27;</span>,<span class="string">&#x27;&#x27;</span>,...</span><br><span class="line">                            num2str(Seconds),<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;s&#x27;</span>];</span><br><span class="line">        <span class="keyword">end</span> </span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        Time_out = [num2str(  Hours),<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;h&#x27;</span>,<span class="string">&#x27;&#x27;</span>,...</span><br><span class="line">                        num2str(Minutes),<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;m&#x27;</span>,<span class="string">&#x27;&#x27;</span>,...</span><br><span class="line">                        num2str(Seconds),<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;s&#x27;</span>];</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    y = Time_out;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>执行效果如下：</p><div align=center><img width="61.8%" height="61.8%" src="https://i.loli.net/2021/09/08/3xipLr7mKtgAyT8.png" alt="randn"/></div><pre><code>我们有时候后不可避免地需要进行大容量数据处理、多仿真结果对比以及复杂算法执行过程监测等，通常而言，数据处理需要耗时几分钟至数小时不等，我们可以采用waitbar函数预测程序执行进度及剩余时间，并希望借此提高我们的工作效率。</code></pre><p><strong>本文作者水平有限，如有错误，恳请批评指正！</strong></p>]]></content>
      
      
      <categories>
          
          <category> Matlab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>White Guassion Noise</title>
      <link href="/2021/08/26/WhiteGuassionNoise/"/>
      <url>/2021/08/26/WhiteGuassionNoise/</url>
      
        <content type="html"><![CDATA[<h2 id="高斯白噪声生成函数"><a href="#高斯白噪声生成函数" class="headerlink" title="高斯白噪声生成函数"></a>高斯白噪声生成函数</h2><p>高斯白噪声的概率密度服从高斯分布，即正态分布:</p><script type="math/tex; mode=display">f(x)=\frac{1}{\sqrt{2\pi}\sigma}\exp\left\{ -\frac{(x-\mu)^2}{2\sigma^2} \right\}</script><p>其中有$\mu$(平均值)和$\sigma$(标准差)两个参数。</p><blockquote><p>如果一个噪声，它的幅度分布服从高斯分布，而它的功率谱密度又是均匀分布的，则称它为高斯白噪声。</p></blockquote><p><strong>下面介绍MATLAB中生成高斯白噪声的三种方法：</strong></p><hr><h2 id="wgn"><a href="#wgn" class="headerlink" title="wgn"></a>wgn</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">noise = wgn(m,n,power)</span><br></pre></td></tr></table></figure><blockquote><p>产生m行n列的高斯白噪声矩阵，power为以dBW为单位的指定输出噪声强度。</p><p>0dBW=10lg(P/1W)=10lg(1W)=10lg(1000mW)=10lg(P/1mW)=30dBm</p></blockquote><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">x = <span class="number">1</span>:<span class="number">1</span>:<span class="number">1000</span>;</span><br><span class="line">y = wgn(<span class="number">1000</span>,<span class="number">1</span>,<span class="number">0</span>);</span><br></pre></td></tr></table></figure><div align=center><img width="61.8%" height="61.8%" src="https://i.loli.net/2021/09/02/RfghOH4MYLvstEj.jpg" alt="wgn"/></div><hr><h2 id="awgn"><a href="#awgn" class="headerlink" title="awgn"></a>awgn</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">noise = awgn(st,SNR,<span class="string">&#x27;measured&#x27;</span>)</span><br></pre></td></tr></table></figure><blockquote><p>在某一信号St中加入高斯白噪声，高斯白噪声的的维度与信号st的维度一致。</p><p>awgn(st,10)是假设信号st的功率为0dBW，然后添加噪声，使得SNR=10;</p><p>awgn(st,SNR,’measured’)是先测量信号st的功率，然后添加噪声，使得SNR=10;</p></blockquote><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">x = (<span class="number">0</span>:<span class="number">2</span>*<span class="built_in">pi</span>/<span class="number">100</span>:<span class="number">2</span>*<span class="built_in">pi</span><span class="number">-2</span>*<span class="built_in">pi</span>/<span class="number">100</span>)&#x27;;</span><br><span class="line">y = <span class="built_in">sin</span>(x);</span><br><span class="line">z = awgn(y,<span class="number">10</span>,<span class="string">&#x27;measured&#x27;</span>);</span><br></pre></td></tr></table></figure><div align=center><img width="61.8%" height="61.8%" src="https://i.loli.net/2021/09/02/weR5dulHmEb9o4h.jpg" alt="awgn"/></div><hr><h2 id="randn"><a href="#randn" class="headerlink" title="randn"></a>randn</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">noise = mu + sigma*randn(m,n)</span><br></pre></td></tr></table></figure><blockquote><p>产生m行n列的高斯白噪声矩阵，$\mu$为其均值，$\sigma$为其标准差。</p><p>如果要在某一信号st中加入高斯白噪声，一般将信号st作为高斯白噪声的均值。</p></blockquote><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">x = (<span class="number">0</span>:<span class="number">2</span>*<span class="built_in">pi</span>/<span class="number">100</span>:<span class="number">2</span>*<span class="built_in">pi</span><span class="number">-2</span>*<span class="built_in">pi</span>/<span class="number">100</span>)&#x27;;</span><br><span class="line">y = <span class="built_in">sin</span>(x);</span><br><span class="line">z = y + <span class="number">0.25</span>*<span class="built_in">randn</span>(<span class="number">100</span>,<span class="number">1</span>)</span><br></pre></td></tr></table></figure><div align=center><img width="61.8%" height="61.8%" src="https://i.loli.net/2021/09/02/pjqLd9KbaolOZg3.jpg" alt="randn"/></div><p><strong>本文作者水平有限，如有错误，恳请批评指正！</strong></p>]]></content>
      
      
      <categories>
          
          <category> Matlab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/08/25/hello-world/"/>
      <url>/2021/08/25/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><p>欢迎来到怀帅的世界！</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ </span><br><span class="line">clc</span><br><span class="line">clear</span><br><span class="line">close all</span><br><span class="line">tic</span><br><span class="line"><span class="built_in">set</span>(0,<span class="string">&#x27;defaultfigurecolor&#x27;</span>,<span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">%% ***************************²ÎÊýÉèÖÃ**************************** %%</span><br><span class="line">%  ÐÅºÅ²ÎÊý</span><br><span class="line">c  = 3  * 1e+8;                                                            % ¹âËÙ</span><br><span class="line"><span class="built_in">fc</span> = 2  * 1e+9;                                                            % ÔØ²¨ÆµÂÊ</span><br><span class="line">lambda = c / <span class="built_in">fc</span>;                                                           % À×´ï²¨³¤</span><br><span class="line">Tr = 5  * 1e-6;                                                            % ÐÅºÅ³ÖÐøÊ±¼ä</span><br><span class="line">Br = 30 * 1e+6;                                                            % ÐÅºÅµ÷Æµ´ø¿í</span><br><span class="line">Kr = Br / Tr;                                                              % µ÷ÆµÐ±ÂÊ</span><br><span class="line"></span><br><span class="line">alpha_os = 4.0;                                                            % ¹ý²ÉÑùÂÊ</span><br><span class="line">Fr = alpha_os * Br;                                                        % ¿ìÊ±¼ä²ÉÑùÆµÂÊ</span><br><span class="line">Nr = round( Fr * Tr );                                                     % ¿ìÊ±¼ä²ÉÑùµãÊý</span><br><span class="line"></span><br><span class="line">disp([<span class="string">&#x27;ÀíÂÛ¾àÀë·Ö±æÂÊÎª£º&#x27;</span>, num2str( c / ( 2 * Br ) ), <span class="string">&#x27;m&#x27;</span>]);</span><br><span class="line">disp([<span class="string">&#x27;ÀíÂÛ²â»æ´ø´ø¿íÎª£º&#x27;</span>, num2str( c / ( 2 * Br ) * Nr ), <span class="string">&#x27;m&#x27;</span>]);</span><br><span class="line">disp(<span class="string">&#x27;--------------------------------&#x27;</span>);</span><br><span class="line">%  Ä¿±ê²ÎÊý</span><br><span class="line">position_target = [ 2997, 3000, 3050 ];                                    % Ä¿±êÏà¶ÔÀ×´ïµÄÐ±¾à</span><br><span class="line">sigma_target = [ 1, 1, 1 ];                                                % Ä¿±êµÄºóÏòÉ¢ÉäÏµÊý</span><br><span class="line">num_target = length( position_target );                                    % Ä¿±êÊýÁ¿</span><br><span class="line">disp([<span class="string">&#x27;Ä¿±êAµÄÊµ¼Ê¾àÀëÎª£º&#x27;</span>, num2str( position_target(1) ), <span class="string">&#x27;m&#x27;</span>]);</span><br><span class="line">disp([<span class="string">&#x27;Ä¿±êBµÄÊµ¼Ê¾àÀëÎª£º&#x27;</span>, num2str( position_target(2) ), <span class="string">&#x27;m&#x27;</span>]);</span><br><span class="line">disp([<span class="string">&#x27;Ä¿±êCµÄÊµ¼Ê¾àÀëÎª£º&#x27;</span>, num2str( position_target(3) ), <span class="string">&#x27;m&#x27;</span>]);</span><br><span class="line">disp(<span class="string">&#x27;--------------------------------&#x27;</span>);</span><br><span class="line">%  ²â¾à²ÎÊý</span><br><span class="line">Rmin = 1000;</span><br><span class="line">Rmax = 7000;</span><br><span class="line">Rwid = Rmax - Rmin;                                                        % ×î´ó²â¾à³¤¶È</span><br><span class="line">Twid = 2 * Rwid / c;                                                       % »Ø²¨´°µÄ³¤¶È</span><br><span class="line">Nwid = round( Fr * Twid );                                                 % »Ø²¨ÐÅºÅµÄ²ÉÑùµãÊý</span><br><span class="line">%% ***************************²â¾à·ÖÎö**************************** %%</span><br><span class="line">%  ·¢ÉäÐÅºÅ</span><br><span class="line">t_tau_1 = linspace( 0, Nr-1, Nr ) / Nr * Tr;</span><br><span class="line">sot = ( t_tau_1 &lt;= Tr ) .* exp( 1j * pi * Kr * ( t_tau_1 - Tr/2 ).^2 );</span><br><span class="line">%  »Ø²¨ÐÅºÅ</span><br><span class="line">t_tau_2 = linspace( 2*Rmin/c, 2*Rmax/c, Nwid );</span><br><span class="line"></span><br><span class="line">srt_r = zeros( 1, Nwid );</span><br><span class="line"><span class="keyword">for</span> i = 1 : num_target</span><br><span class="line">    t_tau_3 = t_tau_2 - 2 * position_target(i) / c;</span><br><span class="line">    wr = abs( t_tau_3 ) &lt;= Tr/2;</span><br><span class="line">    srt_target_r = sigma_target(i) * wr .* exp( 1j * pi * Kr * t_tau_3.^2 ) *...</span><br><span class="line">                                           exp( -1j * 4*pi * <span class="built_in">fc</span> * position_target(i) / c );</span><br><span class="line">    srt_r = srt_r + srt_target_r;</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">figure</span><br><span class="line">subplot(311)</span><br><span class="line">plot( t_tau_1*1e+6, real(sot), <span class="string">&#x27;b&#x27;</span> );hold on;xlabel(<span class="string">&#x27;Ê±¼ä/\mus&#x27;</span>);ylabel(<span class="string">&#x27;·ù¶È&#x27;</span>);</span><br><span class="line">plot( t_tau_2*1e+6, real(srt_r), <span class="string">&#x27;r&#x27;</span> );hold on;xlabel(<span class="string">&#x27;Ê±¼ä/\mus&#x27;</span>);ylabel(<span class="string">&#x27;·ù¶È&#x27;</span>);title(<span class="string">&#x27;·¢ÉäÐÅºÅ&amp;»Ø²¨ÐÅºÅ&#x27;</span>);</span><br><span class="line">grid on;axis([0, 50, -4, 4]);</span><br><span class="line"></span><br><span class="line">%  Æ¥ÅäÂË²¨</span><br><span class="line">Nfft = 2^nextpow2( 2 * Nwid - 1 );</span><br><span class="line">Srf_r = fft( srt_r, Nfft );</span><br><span class="line"></span><br><span class="line">Hrf_2 = conj( fft( sot, Nfft ) );                                         </span><br><span class="line"></span><br><span class="line">Yrf_r = Srf_r .* Hrf_2;</span><br><span class="line">yrt_r = fftshift( ifft( Yrf_r ) );</span><br><span class="line"></span><br><span class="line">%  ²¹Æë³¤¶È</span><br><span class="line">N0 = round( Nfft/2 - Nr/2 );</span><br><span class="line">yrt_r_1 = yrt_r( N0 : N0 + Nwid - 1 );</span><br><span class="line">%  ¹éÒ»»¯</span><br><span class="line">yrt_r_2 = 20 * log10( abs( yrt_r_1 ) ./ max( abs( yrt_r_1 ) ) + eps);</span><br><span class="line"></span><br><span class="line">% SNR_n = 13;</span><br><span class="line">% signal = awgn( yrt_r_1, SNR_n, <span class="string">&#x27;measured&#x27;</span> );</span><br><span class="line"></span><br><span class="line">%  ¾àÀë²âÁ¿</span><br><span class="line">R_tau = t_tau_2*c/2;                                                      </span><br><span class="line"></span><br><span class="line">R_peaks = findpeaks( yrt_r_2 );</span><br><span class="line">R_peaks = sort( R_peaks, <span class="string">&#x27;descend&#x27;</span> );</span><br><span class="line">R_dect_1 = R_tau( yrt_r_2 == R_peaks(1) );</span><br><span class="line">R_dect_2 = R_tau( yrt_r_2 == R_peaks(2) );</span><br><span class="line">R_dect_3 = R_tau( yrt_r_2 == R_peaks(3) );</span><br><span class="line">R_dect = [ R_dect_1, R_dect_2, R_dect_3 ];</span><br><span class="line">R_dect = sort( R_dect, <span class="string">&#x27;ascend&#x27;</span> );</span><br><span class="line">disp([<span class="string">&#x27;Ä¿±êAµÄ²âÁ¿¾àÀëÎª£º&#x27;</span>, num2str( R_dect(1)), <span class="string">&#x27;m&#x27;</span>]);</span><br><span class="line">disp([<span class="string">&#x27;Ä¿±êBµÄ²âÁ¿¾àÀëÎª£º&#x27;</span>, num2str( R_dect(2)), <span class="string">&#x27;m&#x27;</span>]);</span><br><span class="line">disp([<span class="string">&#x27;Ä¿±êCµÄ²âÁ¿¾àÀëÎª£º&#x27;</span>, num2str( R_dect(3)), <span class="string">&#x27;m&#x27;</span>]);</span><br><span class="line">disp(<span class="string">&#x27;--------------------------------&#x27;</span>);</span><br><span class="line"></span><br><span class="line">subplot(312)</span><br><span class="line">plot( R_tau, abs(yrt_r_1) );xlabel(<span class="string">&#x27;¾àÀë/m&#x27;</span>);ylabel(<span class="string">&#x27;·ù¶È&#x27;</span>);title(<span class="string">&#x27;À×´ï»Ø²¨¾­¹ýÂö³åÑ¹Ëõ&#x27;</span>);</span><br><span class="line">grid on;axis([0, 7500, 0, 800]);</span><br><span class="line">subplot(313)</span><br><span class="line">plot( R_tau, yrt_r_2 );xlabel(<span class="string">&#x27;¾àÀë/m&#x27;</span>);ylabel(<span class="string">&#x27;·ù¶È/dB&#x27;</span>);title(<span class="string">&#x27;À×´ï»Ø²¨¾­¹ýÂö³åÑ¹Ëõ&#x27;</span>);</span><br><span class="line">grid on;axis([0, 7500, -40, 1]);</span><br><span class="line">% ¾Ö²¿·Å´ó</span><br><span class="line">figure</span><br><span class="line">subplot(211)</span><br><span class="line">plot( R_tau, abs(yrt_r_1) );xlabel(<span class="string">&#x27;¾àÀë/m&#x27;</span>);ylabel(<span class="string">&#x27;·ù¶È&#x27;</span>);title(<span class="string">&#x27;À×´ï»Ø²¨¾­¹ýÂö³åÑ¹Ëõ&#x27;</span>);</span><br><span class="line">grid on;axis([2900, 3100, 250, 800]);</span><br><span class="line">subplot(212)</span><br><span class="line">plot( R_tau, yrt_r_2 );xlabel(<span class="string">&#x27;¾àÀë/m&#x27;</span>);ylabel(<span class="string">&#x27;·ù¶È/dB&#x27;</span>);title(<span class="string">&#x27;À×´ï»Ø²¨¾­¹ýÂö³åÑ¹Ëõ&#x27;</span>);</span><br><span class="line">grid on;axis([2900, 3100, -20, 1]);</span><br><span class="line"></span><br><span class="line">%% -------------------------------------------------------------- %%</span><br><span class="line">toc</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Text </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Text </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
